
<form id='eform' class='xg-form' style='margin-bottom:0;'>
    @await Component.InvokeAsync("XiHide", new { fid = "Id" })

    @await Component.InvokeAsync("XiText", new { title = "帳號", fid = "Account", required = true, maxLen = 20 })
    @await Component.InvokeAsync("XiText", new { title = "使用者名稱", fid = "Name", required = true, maxLen = 20 })
    @await Component.InvokeAsync("XiText", new { title = "密碼", fid = "Pwd", type = "password", maxLen = 32 })
    @await Component.InvokeAsync("XiSelect", new { title = "部門", fid = "DeptId", rows = (List<IdStrDto>)ViewBag.Depts })
    @await Component.InvokeAsync("XiCheck", new { title = "資料狀態", fid = "Status", label = "啟用" })
</form>

<form class='xg-form'>
    <div class='row'>
        <div class='col-md-2 xg-label'>角色清單</div>
        <div class='col-md-8 xg-input'>
            <!-- 用 table 來控制多行時上下欄位的寬度一致 -->
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
                <tbody>
                    <tr>
                        <td id="divRoles">
                            @foreach (var row in (List<IdStrDto>)ViewBag.Roles)
                            {
                                @await Component.InvokeAsync("XiCheck", new { fid = row.Id, value = row.Id, label = row.Str })
                            }
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</form>
@await Component.InvokeAsync("XgSaveBack")

@*
    <div class='xg-btns-box'>
        <span class="xg-block-label">用戶角色</span>
        @await Component.InvokeAsync("XgAddRow", "_me.mUserRole.onAddRow()")
    </div>
    <form id='eformUserRole' class='xg-form' style="border:none; width:50%;">
        <table class="table table-bordered xg-table xg-no-hline" cellspacing="0">
            <thead>
                <tr>
                    @await Component.InvokeAsync("XgTh", new { title = "角色", required = true })
                    <th></th>
                </tr>
            </thead>
            <tbody id="tbodyUserRole"></tbody>
        </table>
    </form>
    <script id="tplUserRole" type="text/template">
        <tr>
            @await Component.InvokeAsync("XiHide", new { fid = "Id" })
            @await Component.InvokeAsync("XiHide", new { fid = "UserId" })
            <td>@await Component.InvokeAsync("XiSelect", new { fid = "RoleId", rows = (List<IdStrDto>)ViewBag.Roles, required = true })</td>
            <td width='60px' class='text-center'>@await Component.InvokeAsync("XgDeleteRow", "_me.mUserRole.onDeleteRow(this)")</td>
        </tr>
    </script>
*@
