@inject IHtmlLocalizer<HrAdm.R0> R0
@inject IViewLocalizer R

<script src="~/js/view/CustInput.js"></script>
<script type="text/javascript">
    $(function () {
        _me.init();
    });
</script>

@await Component.InvokeAsync("XgProgPath", new { names = new string[] { R0["MenuCustInput"].Value } })
<div class="xp-prog">
    <div id="divRead">
        <form id='rform' class='xg-form'>
            <div class="row">
                @await Component.InvokeAsync("XiText", new { title = R["Text"].Value, fid = "FldText", maxLen = 20, inRow = true })
                @await Component.InvokeAsync("XgFindTbar", new { })
            </div>
        </form>

        <div class='xg-btns-box'>
            @await Component.InvokeAsync("XgCreate")
        </div>
        <table id="table1" class="table table-bordered xg-table" cellspacing="0">
            <thead>
                <tr>
                    <th>@R["Text"]</th>
                    <th>@R["Int"]</th>
                    <th>@R["Dec"]</th>
                    <th>@R0["Crud"]</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>

    <div id="divEdit" class="xg-hide">
        <form id='eform' class='xg-form'>
            @await Component.InvokeAsync("XiHide", new { fid = "Id" })

            @await Component.InvokeAsync("XiText", new { title = R["Text"].Value, fid = "FldText", maxLen = 20, required = true })
            @await Component.InvokeAsync("XiNum", new { title = R["Int"].Value, fid = "FldNum", required = true, cols = "2,2" })
            @await Component.InvokeAsync("XiNum", new { title = R["Dec"].Value, fid = "FldNum2", required = true, isDigit = false, cols = "2,2" })
            @await Component.InvokeAsync("XiCheck", new { title = "CheckBox", fid = "FldCheck" })
            @await Component.InvokeAsync("XiRadios", new { title = "Radio", fid = "FldRadio", rows = (List<IdStrDto>)ViewBag.Radios, label = "Radios" })
            @await Component.InvokeAsync("XiSelect", new { title = "Select", fid = "FldSelect", rows = (List<IdStrDto>)ViewBag.Selects, required = true })
            @await Component.InvokeAsync("XiDate", new { title = R["Date"].Value, fid = "FldDate", required = true })
            @await Component.InvokeAsync("XiDt", new { title = R["Datetime"].Value, fid = "FldDatetime", required = true, cols = "2,8" })
            @await Component.InvokeAsync("XiFile", new { title = R0["UpdFile"].Value, fid = "FldFile", required = true })
            @await Component.InvokeAsync("XiTextArea", new { title = R["Textarea"].Value, fid = "FldTextarea", maxLen = 255, required = true, cols = "2,9" })
            @await Component.InvokeAsync("XiHtml", new { title = "Html", fid = "FldHtml", required = true, cols = "2,9" })
        </form>

        @await Component.InvokeAsync("XgSaveBack")
    </div>
</div>